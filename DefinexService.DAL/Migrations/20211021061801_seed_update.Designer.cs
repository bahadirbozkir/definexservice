// <auto-generated />
using System;
using DefinexService.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DefinexService.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211021061801_seed_update")]
    partial class seed_update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DefinexService.DAL.Entity.BankGateway", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("BankListId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientPassword")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ClientUsername")
                        .HasColumnType("varchar(250)");

                    b.Property<long>("ConfigurationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("TerminalId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BankListId");

                    b.ToTable("BankGateway");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BankListId = 0L,
                            ClientPassword = "test",
                            ClientUsername = "test",
                            ConfigurationId = 123L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(1246),
                            TerminalId = 123L
                        },
                        new
                        {
                            Id = 2L,
                            BankListId = 0L,
                            ClientPassword = "test",
                            ClientUsername = "test",
                            ConfigurationId = 123L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(1418),
                            TerminalId = 123L
                        },
                        new
                        {
                            Id = 3L,
                            BankListId = 0L,
                            ClientPassword = "test",
                            ClientUsername = "test",
                            ConfigurationId = 123L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(1424),
                            TerminalId = 123L
                        });
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.BankList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("BankLists");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 871, DateTimeKind.Utc).AddTicks(8243),
                            Name = "Is Bankasi"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 871, DateTimeKind.Utc).AddTicks(8352),
                            Name = "Garanti"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 871, DateTimeKind.Utc).AddTicks(8357),
                            Name = "Akbank"
                        });
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.Basket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Guid")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.BasketItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("BasketId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(3589),
                            Name = "ELEKTRONIK"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(3638),
                            Name = "OYUN"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(3642),
                            Name = "YAPI MALZEMESI"
                        });
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.CreditCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("BankGatewayId")
                        .HasColumnType("bigint");

                    b.Property<int>("BankType")
                        .HasColumnType("int");

                    b.Property<int>("ConditionType")
                        .HasColumnType("int");

                    b.Property<string>("ConditionValue")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BankGatewayId");

                    b.ToTable("CreditConditions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BankGatewayId = 1L,
                            BankType = 1,
                            ConditionType = 1,
                            ConditionValue = "3500",
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(9803)
                        },
                        new
                        {
                            Id = 2L,
                            BankGatewayId = 2L,
                            BankType = 2,
                            ConditionType = 1,
                            ConditionValue = "3500",
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 877, DateTimeKind.Utc).AddTicks(3871)
                        },
                        new
                        {
                            Id = 3L,
                            BankGatewayId = 3L,
                            BankType = 3,
                            ConditionType = 1,
                            ConditionValue = "3500",
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 877, DateTimeKind.Utc).AddTicks(3944)
                        },
                        new
                        {
                            Id = 4L,
                            BankGatewayId = 1L,
                            BankType = 1,
                            ConditionType = 1,
                            ConditionValue = "3500",
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 877, DateTimeKind.Utc).AddTicks(3948)
                        },
                        new
                        {
                            Id = 5L,
                            BankGatewayId = 2L,
                            BankType = 2,
                            ConditionType = 1,
                            ConditionValue = "3500",
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 877, DateTimeKind.Utc).AddTicks(3951)
                        },
                        new
                        {
                            Id = 6L,
                            BankGatewayId = 3L,
                            BankType = 3,
                            ConditionType = 1,
                            ConditionValue = "3500",
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 877, DateTimeKind.Utc).AddTicks(3953)
                        });
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(7960),
                            Name = "TEST1",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(8076),
                            Name = "TEST2",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2021, 10, 21, 6, 18, 0, 876, DateTimeKind.Utc).AddTicks(8082),
                            Name = "TEST3",
                            Price = 7000m
                        });
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.BankGateway", b =>
                {
                    b.HasOne("DefinexService.DAL.Entity.BankList", "BankList")
                        .WithMany()
                        .HasForeignKey("BankListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.BasketItems", b =>
                {
                    b.HasOne("DefinexService.DAL.Entity.Basket", null)
                        .WithMany("BasketItems")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DefinexService.DAL.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.CreditCondition", b =>
                {
                    b.HasOne("DefinexService.DAL.Entity.BankGateway", "BankGateway")
                        .WithMany()
                        .HasForeignKey("BankGatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DefinexService.DAL.Entity.Product", b =>
                {
                    b.HasOne("DefinexService.DAL.Entity.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
